DECLARE
CONCORDANT NUMBER;
DISCORDANT NUMBER;
COUNTER_FOR_CONCORDANT NUMBER;
COUNTER_FOR_DISCORDANT NUMBER;
ROWELEMENT1 NUMBER;
ROWELEMENT2 NUMBER;
ROWCOUNT1 NUMBER;
ROWCOUNT2 NUMBER;
TOTALROWCOUNT NUMBER;
KENDAL NUMBER;
TAU NUMBER;
KENDAL_TAU NUMBER;
CURSOR ROWSELECTOR IS SELECT STUDENT FROM ALTKENDATA FOR UPDATE;
CURSOR CD_CALCULATOR IS SELECT STUDENT FROM ALTKENDATA;
BEGIN
    SELECT COUNT(*) INTO TOTALROWCOUNT FROM ALTKENDATA;
    COUNTER_FOR_CONCORDANT :=0;
    COUNTER_FOR_DISCORDANT :=0;
    OPEN ROWSELECTOR;
    FOR LOOPCOUNTER IN 1..TOTALROWCOUNT
    LOOP
       CONCORDANT :=0;
       DISCORDANT :=0;
       FETCH ROWSELECTOR INTO ROWELEMENT1;
       IF ROWSELECTOR%FOUND THEN
       ROWCOUNT1 := ROWSELECTOR%ROWCOUNT;
       OPEN CD_CALCULATOR;
                LOOP
                FETCH CD_CALCULATOR INTO ROWELEMENT2;
                IF CD_CALCULATOR%FOUND THEN
                ROWCOUNT2 := CD_CALCULATOR%ROWCOUNT;
                    IF ROWCOUNT2 > ROWCOUNT1 THEN
                        IF ROWELEMENT1 < ROWELEMENT2 THEN
                            COUNTER_FOR_CONCORDANT := COUNTER_FOR_CONCORDANT+1;
                            CONCORDANT := CONCORDANT+1;
                        ELSE
                            COUNTER_FOR_DISCORDANT := COUNTER_FOR_DISCORDANT+1;
                            DISCORDANT := DISCORDANT+1;
                        END IF;
                    END IF;
                ELSE
                    EXIT;
                END IF;
               END LOOP;
         CLOSE CD_CALCULATOR;
       ELSE
        EXIT;
       END IF;
    UPDATE ALTKENDATA SET C = CONCORDANT
    WHERE CURRENT OF ROWSELECTOR;
    UPDATE ALTKENDATA SET D = DISCORDANT
    WHERE CURRENT OF ROWSELECTOR;
    END LOOP;
    CLOSE ROWSELECTOR;
    KENDAL := COUNTER_FOR_CONCORDANT+COUNTER_FOR_DISCORDANT;
    TAU := COUNTER_FOR_CONCORDANT-COUNTER_FOR_DISCORDANT;
    KENDAL_TAU := TAU/KENDAL;
    DBMS_OUTPUT.PUT_LINE('KENDAL TAU : '|| RPAD(KENDAL_TAU,9));
END;
/
